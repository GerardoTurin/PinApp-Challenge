
-- Tabla de empresas
CREATE TABLE "companies" (
"id" BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
"name" VARCHAR(200) NOT NULL,
"address" VARCHAR(200),
"description" TEXT,
"img_url" VARCHAR(250),
"create_at" DATE
);


-- Tabla de tipos de configuración
CREATE TABLE IF NOT EXISTS config_types (
id BIGINT NOT NULL GENERATED ALWAYS AS IDENTITY,
name CHARACTER VARYING(255),
created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
code CHARACTER VARYING(100),
CONSTRAINT config_type_pk PRIMARY KEY (id)
);

-- Tabla de cabeceras de configuración
CREATE TABLE IF NOT EXISTS config_headers (
id BIGINT NOT NULL GENERATED ALWAYS AS IDENTITY,
config_type_id BIGINT NOT NULL,
name CHARACTER VARYING(255),
created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
code CHARACTER VARYING(100),
CONSTRAINT config_headers_pk PRIMARY KEY (id),
CONSTRAINT config_headers_config_types_FK FOREIGN KEY (config_type_id) REFERENCES public.config_types(id)
);

-- Tabla de detalles de configuración
CREATE TABLE IF NOT EXISTS config_details (
id BIGINT NOT NULL GENERATED ALWAYS AS IDENTITY,
config_header_id BIGINT NOT NULL,
company_id BIGINT NOT NULL,
name CHARACTER VARYING(255),
created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
code CHARACTER VARYING(100),
position BIGINT,
parent BIGINT,
system_parameter boolean,
attribute json,
CONSTRAINT config_details_pk PRIMARY KEY (id),
CONSTRAINT config_details_config_headers_FK FOREIGN KEY (config_header_id) REFERENCES public.config_headers(id),
CONSTRAINT config_details_companies_FK FOREIGN KEY (company_id) REFERENCES public.companies(id)
);



-- Tabla de usuarios
CREATE TABLE users (
id SERIAL PRIMARY KEY,
username VARCHAR(50) UNIQUE NOT NULL,
password VARCHAR(100) NOT NULL,
name VARCHAR(50),
lastname VARCHAR(50),
email VARCHAR(50),
status BOOLEAN,
user_type_config_detail_id BIGINT,
img_url VARCHAR(250),
created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
updated_at TIMESTAMP DEFAULT NULL,
CONSTRAINT fk_user_type_config_detail FOREIGN KEY (user_type_config_detail_id) REFERENCES config_details(id)
);



-- Tabla de usuarios y empresas
CREATE TABLE "users_companies" (
"id" BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
"user_id" BIGINT, -- Cambio a BIGINT para ser consistente con la tabla "users"
"company_id" BIGINT, -- Cambio a BIGINT para ser consistente con la tabla "companies"
"create_at" TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
CONSTRAINT fk_user_id FOREIGN KEY (user_id) REFERENCES users(id),
CONSTRAINT fk_company_id FOREIGN KEY (company_id) REFERENCES companies(id)
);

-- Tabla de módulos de la aplicación
CREATE TABLE modules_app (
id BIGINT NOT NULL GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
label VARCHAR(255),
icon VARCHAR(255),
path VARCHAR(100),
created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);


-- Tabla de items de menú
CREATE TABLE menu_items (
id BIGINT NOT NULL GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
label VARCHAR(255),
icon VARCHAR(255),
path VARCHAR(100),
created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
position BIGINT,
module_app_id BIGINT,
CONSTRAINT fk_module_app FOREIGN KEY (module_app_id) REFERENCES modules_app(id)
);


CREATE TABLE roles (
id SERIAL PRIMARY KEY,
name VARCHAR(50),
company_id BIGINT,
created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
updated_at TIMESTAMP DEFAULT NULL,
CONSTRAINT fk_company_id FOREIGN KEY (company_id) REFERENCES companies(id)
);

CREATE TABLE permission_types (
id SERIAL PRIMARY KEY,
name VARCHAR(50)
);


CREATE TABLE modules_roles_permissions (
id SERIAL PRIMARY KEY,
role_id BIGINT,
permission_id BIGINT,
module_id BIGINT,
menu_item_id BIGINT,
CONSTRAINT fk_role_id FOREIGN KEY (role_id) REFERENCES roles(id),
CONSTRAINT fk_permission_id FOREIGN KEY (permission_id) REFERENCES permission_types(id),
CONSTRAINT fk_module_id FOREIGN KEY (module_id) REFERENCES modules_app(id),
CONSTRAINT fk_menu_items_id FOREIGN KEY (menu_item_id) REFERENCES menu_items(id)
);

-- TABLA INTERMEDIA USER ROLES
CREATE TABLE user_roles (
id SERIAL PRIMARY KEY,
user_id BIGINT,
role_id BIGINT,
CONSTRAINT fk_user_id FOREIGN KEY (user_id) REFERENCES users(id),
CONSTRAINT fk_role_id FOREIGN KEY (role_id) REFERENCES roles(id)
);



